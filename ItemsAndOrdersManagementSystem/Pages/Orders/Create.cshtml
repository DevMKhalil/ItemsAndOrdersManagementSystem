@page
@model ItemsAndOrdersManagementSystem.Pages.Orders.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4" >
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
@*                 <label asp-for="Order.UserId" class="control-label"></label>
                <select asp-for="Order.UserId" class="form-control" disabled asp-items="Model.UserList">
                    @foreach (var user in Model.UserList)
                    {
                        <option value="@user.Value" @(user.Value == Model.User.Identity.Name ? "selected" : "")>@user.Text</option>
                    }
                </select> *@
                <label class="control-label">User Name : </label>
                <span>@Model.User.Identity.Name</span>
            </div>

            <div class="form-group" id="itemDetailsContainer">
                <button type="button" id="addItemDetailButton" class="btn btn-primary col-md-4" style="margin-bottom: 10px;">Add Item Detail</button>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.getElementById('addItemDetailButton').addEventListener('click', function () {
            addNewItemDetailRow();
        });

        function addNewItemDetailRow() {
            var container = document.getElementById('itemDetailsContainer');
            var childLength = container.getElementsByClassName('col-md-8').length;
            var newRow = document.createElement('div');
            newRow.className = 'col-md-8';
            newRow.innerHTML = getNewItemDetailRowHtml(childLength);
            container.insertBefore(newRow, document.getElementById('addItemDetailButton'));
            updateIndexes();
        }

        function removeItemDetailRow(button) {
            var rowToRemove = button.closest('.col-md-8');
            rowToRemove.remove();
            updateIndexes();
        }

        function updateIndexes() {
            var rows = document.querySelectorAll('.col-md-8');
            rows.forEach(function (row, index) {
                var selects = row.querySelectorAll('select');
                selects.forEach(function (select) {
                    var name = select.getAttribute('name');
                    var newName = name.replace(/\[\d+\]/, '[' + index + ']');
                    select.setAttribute('name', newName);
                });
            });
        }

        function getNewItemDetailRowHtml(index) {
            return `
                    <div class="row">
                        <div class="col-md-6">
                                <select name="Order.OrderItemsDtoList[${index}]" id="Order_OrderItemsDtoList_${index}" class="form-control form-select">
                                <option selected disabled value="">--Items--</option>
        @foreach (var item in Model.ItemList)
        {
                                        <option value="@item.Value">@item.Text</option>
        }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button type="button" onclick="removeItemDetailRow(this)" class="btn btn-danger">Delete</button>
                        </div>
                    </div>`;
        }
    </script>
}
